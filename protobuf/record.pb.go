// Code generated by protoc-gen-go. DO NOT EDIT.
// source: record.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record_RecordKind int32

const (
	Record_SET Record_RecordKind = 0
	Record_DEL Record_RecordKind = 1
	Record_CMT Record_RecordKind = 2
)

var Record_RecordKind_name = map[int32]string{
	0: "SET",
	1: "DEL",
	2: "CMT",
}

var Record_RecordKind_value = map[string]int32{
	"SET": 0,
	"DEL": 1,
	"CMT": 2,
}

func (x Record_RecordKind) String() string {
	return proto.EnumName(Record_RecordKind_name, int32(x))
}

func (Record_RecordKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0, 0}
}

type Record struct {
	Kind                 Record_RecordKind `protobuf:"varint,1,opt,name=kind,proto3,enum=protobuf.Record_RecordKind" json:"kind,omitempty"`
	Key                  string            `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string            `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	TransactionId        int64             `protobuf:"varint,4,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetKind() Record_RecordKind {
	if m != nil {
		return m.Kind
	}
	return Record_SET
}

func (m *Record) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Record) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Record) GetTransactionId() int64 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

func init() {
	proto.RegisterEnum("protobuf.Record_RecordKind", Record_RecordKind_name, Record_RecordKind_value)
	proto.RegisterType((*Record)(nil), "protobuf.Record")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_bf94fd919e302a1d) }

var fileDescriptor_bf94fd919e302a1d = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4a, 0x4d, 0xce,
	0x2f, 0x4a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a,
	0x1b, 0x18, 0xb9, 0xd8, 0x82, 0xc0, 0x52, 0x42, 0xfa, 0x5c, 0x2c, 0xd9, 0x99, 0x79, 0x29, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0xd2, 0x7a, 0x30, 0x35, 0x7a, 0x10, 0x79, 0x28, 0xe5, 0x9d,
	0x99, 0x97, 0x12, 0x04, 0x56, 0x28, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x29, 0xc1, 0xa4, 0xc0,
	0xa8, 0xc1, 0x19, 0x04, 0x62, 0x0a, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6, 0x4a, 0x30,
	0x83, 0xc5, 0x20, 0x1c, 0x21, 0x15, 0x2e, 0xde, 0x92, 0xa2, 0xc4, 0xbc, 0xe2, 0xc4, 0xe4, 0x92,
	0xcc, 0xfc, 0x3c, 0xcf, 0x14, 0x09, 0x16, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x54, 0x41, 0x25, 0x75,
	0x2e, 0x2e, 0x84, 0x0d, 0x42, 0xec, 0x5c, 0xcc, 0xc1, 0xae, 0x21, 0x02, 0x0c, 0x20, 0x86, 0x8b,
	0xab, 0x8f, 0x00, 0x23, 0x88, 0xe1, 0xec, 0x1b, 0x22, 0xc0, 0x94, 0xc4, 0x06, 0x76, 0x98, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x7a, 0x8e, 0x71, 0xd3, 0x00, 0x00, 0x00,
}
